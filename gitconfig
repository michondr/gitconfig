# vim: set filetype=gitconfig:
[color]
	ui = auto

[alias]
	alias = "!f(){ git config -l | grep alias | sort; };f"
	st = status --short --branch
	ci = commit
	cf = commit --fixup
	cia = commit --amend --no-edit
	co = checkout
	cp = cherry-pick
	br = branch
	bra = branch -avv --list
	rb = rebase -i master --autosquash
	rbc = rebase --continue
	rba = rebase --abort
	sth = "stash show stash@{0} -p"
	stl = stash list
	sll = "!f() { for s in `git stash list --pretty=format:%gd`; do git stash show -p $s; done; };f"
	stu = stash pop
	rmbranch = "!f(){ git branch -d ${1} && git push origin --delete ${1}; };f"
	mkbranch = "!f(){ git checkout -b ${1} && git push origin -u ${1}; };f"
	puff = "push --force-with-lease"
	unfuck = "!f(){ git reset --hard origin/`git rev-parse --abbrev-ref HEAD`; rm -rfv `git status --short | grep ^? | cut -d' '  -f2-`; }; f"
	up = "pull --ff-only --stat --prune"
	rs = reset HEAD~
	defo = "!f(){ for branch in `git branch -vv | grep -vE '/om-|master' | awk '{print $1}'`; do git branch -D $branch; done };f"	# delete foreign - those not containing 'om-' (my branch prefix) or 'master'
	deloc = "!f(){ for branch in `git branch -vv | grep ': gone]' | awk '{print $1}'`; do git branch -D $branch; done };f"          # delete local which are not in origin anymore

[core]
	editor = vim
	# pager = vim # doesn't support colors=(
	excludesfile = "~/.gitignore"

[push]
	default = simple

[grep]
	lineNumber = true
